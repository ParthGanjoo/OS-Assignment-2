Only in linux-5.19.8-new: 2d_cpy_syscall
diff -ru linux-5.19.8-old/arch/x86/entry/syscalls/syscall_64.tbl linux-5.19.8-new/arch/x86/entry/syscalls/syscall_64.tbl
--- linux-5.19.8-old/arch/x86/entry/syscalls/syscall_64.tbl	2022-09-08 14:54:08.000000000 +0530
+++ linux-5.19.8-new/arch/x86/entry/syscalls/syscall_64.tbl	2022-11-24 23:36:42.649977776 +0530
@@ -372,6 +372,8 @@
 448	common	process_mrelease	sys_process_mrelease
 449	common	futex_waitv		sys_futex_waitv
 450	common	set_mempolicy_home_node	sys_set_mempolicy_home_node
+451	common	hello_system_call	sys_hello
+452	common	2d_copy_system_call	sys_kernel_2d_memcpy
 
 #
 # Due to a historical design error, certain syscalls are numbered differently
Only in linux-5.19.8-new: hello_syscall
diff -ru linux-5.19.8-old/Makefile linux-5.19.8-new/Makefile
--- linux-5.19.8-old/Makefile	2022-09-08 14:54:08.000000000 +0530
+++ linux-5.19.8-new/Makefile	2022-11-24 23:43:23.389974622 +0530
@@ -1100,7 +1100,7 @@
 export MODULES_NSDEPS := $(extmod_prefix)modules.nsdeps
 
 ifeq ($(KBUILD_EXTMOD),)
-core-y			+= kernel/ certs/ mm/ fs/ ipc/ security/ crypto/
+core-y			+= kernel/ certs/ mm/ fs/ ipc/ security/ crypto/ hello_syscall/ 2d_cpy_syscall/
 core-$(CONFIG_BLOCK)	+= block/
 core-$(CONFIG_IO_URING)	+= io_uring/
 
